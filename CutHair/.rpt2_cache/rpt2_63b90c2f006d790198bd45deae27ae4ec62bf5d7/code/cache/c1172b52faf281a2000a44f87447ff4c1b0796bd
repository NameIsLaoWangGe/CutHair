{
  "code": "import { lwg } from \"../Lwg_Template/lwg\";\r\nimport { G, GEnum } from \"../Lwg_Template/Global\";\r\nexport default class UIOperation extends lwg.Admin.Scene {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.cameraAndRazorPos = new Laya.Vector3();\r\n        this.moveSwitch = false;\r\n        this.speed = 0.09;\r\n    }\r\n    selfNode() {\r\n        this.Rocker = this.self['Rocker'];\r\n        this.Razor = lwg.Admin._sceneControl[lwg.Admin.SceneName.GameMain3D]['GameMain3D'].Razor;\r\n        this.MainCamera = lwg.Admin._sceneControl[lwg.Admin.SceneName.GameMain3D]['GameMain3D'].MainCamera;\r\n    }\r\n    lwgInit() {\r\n    }\r\n    btnOnClick() {\r\n        lwg.Click.on(lwg.Click.ClickType.largen, null, this.self['BtnLast'], this, this.btnAgainDown, null, this.btnAgainUp, null);\r\n    }\r\n    btnAgainDown(e) {\r\n        e.stopPropagation();\r\n    }\r\n    btnAgainUp(e) {\r\n        e.stopPropagation();\r\n        G._taskNum++;\r\n        console.log('下一关');\r\n    }\r\n    mainCameraMove() {\r\n        if (G._taskNum > G._taskArr.length) {\r\n            return;\r\n        }\r\n        switch (G._taskArr[G._taskNum]) {\r\n            case GEnum.TaskType.leftBeard:\r\n                break;\r\n            case GEnum.TaskType.rightBeard:\r\n                break;\r\n            case GEnum.TaskType.sideHair:\r\n                break;\r\n            case GEnum.TaskType.topHead:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    tween(target) {\r\n        Laya.timer.once(100, this, function () {\r\n            let v = Laya.Tween.to(target.transform.position, {\r\n                x: 40, y: 40, z: 40, update: new Laya.Handler(this, () => {\r\n                    target.transform.localPositionX = target.transform.localPosition.x;\r\n                    target.transform.localPositionY = target.transform.localPosition.y;\r\n                    target.transform.localPositionZ = target.transform.localPosition.z;\r\n                })\r\n            }, 3000, Laya.Ease.backIn, Laya.Handler.create(this, () => {\r\n                console.log(\"执行完成\");\r\n            }));\r\n        });\r\n    }\r\n    onStageMouseDown(e) {\r\n        this.moveSwitch = true;\r\n        this.touchPosX = e.stageX;\r\n        this.touchPosY = e.stageY;\r\n    }\r\n    onStageMouseMove(e) {\r\n        if (this.moveSwitch) {\r\n            let diffX = e.stageX - this.touchPosX;\r\n            let diffY = e.stageY - this.touchPosY;\r\n            this.Rocker.x += diffX;\r\n            this.Rocker.y += diffY;\r\n            this.touchPosX = e.stageX;\r\n            this.touchPosY = e.stageY;\r\n            this.Razor.transform.localPositionX -= diffX * 0.01;\r\n            this.Razor.transform.localPositionY -= diffY * 0.01;\r\n        }\r\n    }\r\n    onStageMouseUp(e) {\r\n        this.moveSwitch = false;\r\n    }\r\n    RazorFellowGuide() {\r\n        let p = lwg.Tools.twoSubV3_3D(this.Razor.transform.position, this.Guide.transform.position);\r\n        let normalizP = new Laya.Vector3();\r\n        Laya.Vector3.normalize(p, normalizP);\r\n        this.Razor.transform.localPositionX -= normalizP.x * this.speed;\r\n        this.Razor.transform.localPositionZ -= normalizP.z * this.speed;\r\n    }\r\n    cameraFellowRazor() {\r\n        this.MainCamera.transform.localPositionX = this.Razor.transform.position.x - this.cameraAndRazorPos.x;\r\n        this.MainCamera.transform.localPositionZ = this.Razor.transform.position.z - this.cameraAndRazorPos.z;\r\n    }\r\n    lwgUpDate() {\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/CutHair/Project/CutHair/src/script/Lwg_Template/lwg.ts",
    "D:/Game/project/CutHair/Project/CutHair/src/script/Lwg_Template/Global.ts"
  ]
}
